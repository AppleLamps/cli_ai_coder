name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release_check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install mkdocs mkdocs-material mkdocs-macros-plugin mkdocstrings mkdocstrings-python build
    - name: Run release check
      run: python scripts/release_check.py

  build_publish:
    needs: release_check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    - name: Generate Homebrew formula
      run: python scripts/generate_brew_formula.py > homebrew-cli-ai-coder.rb
    - name: Upload Homebrew formula
      uses: actions/upload-artifact@v4
      with:
        name: homebrew-formula
        path: homebrew-cli-ai-coder.rb
    - name: Upload AUR PKGBUILD
      uses: actions/upload-artifact@v4
      with:
        name: aur-pkgbuild
        path: scripts/PKGBUILD
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          See [CHANGELOG.md](CHANGELOG.md) for details.
        draft: false
        prerelease: false